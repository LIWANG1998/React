{"ast":null,"code":"var _jsxFileName = \"/Users/lihongyao/Desktop/\\u4ED3\\u5E93/React/codes/hello-react/src/components/hoc/hoc.js\";\nimport React from 'react'; // 参数首字母必须大写，必须要有返回值，在下面使用\n\nconst Hoc = Component => {\n  var _temp;\n\n  // 类名可以省略，省略的话标签名就是以temp或者其他的代替，必须要有返回值\n  return _temp = class _ extends React.Component {\n    constructor(...args) {\n      super(...args);\n\n      this.banner = () => {\n        // 这里是实现某个功能的函数代码\n        return 'Muzili';\n      };\n    }\n\n    render() {\n      // 将参数当做一个组件返回出去\n      return React.createElement(Component, {\n        banner: this.banner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      });\n    }\n\n  }, _temp;\n};\n\nclass A extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \" A\\u7EC4\\u4EF6 \"), this.props.banner());\n  }\n\n}\n\nclass B extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \" B\\u7EC4\\u4EF6 \"), this.props.banner());\n  }\n\n} // 组件名必须首字母大写，将组件名当参数传进去，这样这个组件就有高阶组件内的方法了\n\n\nconst HocA = Hoc(A);\nconst HocB = Hoc(B);\n\nclass C extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \" C\\u7EC4\\u4EF6 \"), React.createElement(HocA, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(HocB, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default C;","map":{"version":3,"sources":["/Users/lihongyao/Desktop/仓库/React/codes/hello-react/src/components/hoc/hoc.js"],"names":["React","Hoc","Component","_","banner","render","A","props","B","HocA","HocB","C"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,GAAG,GAAIC,SAAD,IAAe;AAAA;;AACvB;AACA,iBAAO,MAAMC,CAAN,SAAgBH,KAAK,CAACE,SAAtB,CAAgC;AAAA;AAAA;;AAAA,WACnCE,MADmC,GAC1B,MAAM;AAAE;AACb,eAAO,QAAP;AACH,OAHkC;AAAA;;AAInCC,IAAAA,MAAM,GAAG;AACL;AACA,aACI,oBAAC,SAAD;AAAW,QAAA,MAAM,EAAE,KAAKD,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;AATkC,GAAvC;AAWH,CAbD;;AAcA,MAAME,CAAN,SAAgBN,KAAK,CAACE,SAAtB,CAAgC;AAC5BG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEK,KAAKE,KAAL,CAAWH,MAAX,EAFL,CADJ;AAOH;;AAT2B;;AAYhC,MAAMI,CAAN,SAAgBR,KAAK,CAACE,SAAtB,CAAgC;AAC5BG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEK,KAAKE,KAAL,CAAWH,MAAX,EAFL,CADJ;AAMH;;AAR2B,C,CAWhC;;;AACA,MAAMK,IAAI,GAAGR,GAAG,CAACK,CAAD,CAAhB;AACA,MAAMI,IAAI,GAAGT,GAAG,CAACO,CAAD,CAAhB;;AAGA,MAAMG,CAAN,SAAgBX,KAAK,CAACE,SAAtB,CAAgC;AAC5BG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQH;;AAV2B;;AAYhC,eAAeM,CAAf","sourcesContent":["import React from 'react';\n\n// 参数首字母必须大写，必须要有返回值，在下面使用\nconst Hoc = (Component) => {\n    // 类名可以省略，省略的话标签名就是以temp或者其他的代替，必须要有返回值\n    return class _ extends React.Component { \n        banner = () => { // 这里是实现某个功能的函数代码\n            return 'Muzili'\n        }\n        render() {\n            // 将参数当做一个组件返回出去\n            return (\n                <Component banner={this.banner}></Component>\n            )\n        }\n    }\n}\nclass A extends React.Component {\n    render() {\n        return (\n            <div>\n                <p> A组件 </p>\n                {this.props.banner() } \n                {/* 在下面使用了高阶组件后，这里就可以直接使用里面的方法了 */}\n            </div>\n        )\n    }\n}\n\nclass B extends React.Component {\n    render() {\n        return (\n            <div>\n                <p> B组件 </p>\n                {this.props.banner()}\n            </div>\n        )\n    }\n}\n\n// 组件名必须首字母大写，将组件名当参数传进去，这样这个组件就有高阶组件内的方法了\nconst HocA = Hoc(A);\nconst HocB = Hoc(B);\n\n\nclass C extends React.Component {\n    render() {\n        return (\n            <div>\n                <p> C组件 </p>\n                <HocA></HocA>\n                {/* 这里使用的高阶组件 */}\n                <HocB></HocB>\n            </div>\n        )\n    }\n}\nexport default C;\n"]},"metadata":{},"sourceType":"module"}